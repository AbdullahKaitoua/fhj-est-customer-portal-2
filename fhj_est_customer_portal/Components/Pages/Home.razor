@page "/"
@using Microsoft.AspNetCore.Components.Authorization
@using System.Security.Claims
@using Microsoft.EntityFrameworkCore
@using fhj_est_customer_portal.Data
@using fhj_est_customer_portal.Entities
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject ApplicationDbContext DbContext

<PageTitle>Home</PageTitle>

<div class="container">
    <AuthorizeView>
        <Authorized>
            <div class="jumbotron mt-5">
                <h1 class="display-4">Hello, @context.User.GetFullName()!</h1>
                <p class="lead">Welcome back to the Customer Portal of Energienetze Steiermark.</p>
            </div>
        </Authorized>
        <NotAuthorized>
            <div class="jumbotron mt-5">
                <h1 class="display-4">Welcome to Customer Portal of Energienetze Steiermark</h1>
                <p class="lead">To be able to see more, please <a href="Account/Register" class="btn btn-primary">Register</a> or <a href="Account/Login" class="btn btn-secondary">Login</a></p>
            </div>
        </NotAuthorized>
    </AuthorizeView>
</div>

@code {
    private string userId;
    private string userEmail;
    private string userRole;

    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;

        if (user.Identity.IsAuthenticated)
        {
            userId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
            userEmail = user.FindFirst(ClaimTypes.Email)?.Value;
            userRole = user.FindFirst(ClaimTypes.Role)?.Value;
        }
    }
}
