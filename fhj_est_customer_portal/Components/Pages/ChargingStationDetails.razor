@page "/chargingstationdetails/{StationId}"
@using fhj_est_customer_portal.Services
@inject ChargingStationService ChargingStationService
@inject ChargingPointService ChargingPointService
@inject NavigationManager NavigationManager
@inject AuthenticationStateProvider AuthenticationStateProvider
@using System.Security.Claims
@rendermode InteractiveServer
@using fhj_est_customer_portal.Entities
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<h3 class="text-primary mb-4">Charging Station Info</h3>

@if (chargingStation == null)
{
    <p class="text-secondary"><em>Loading...</em></p>
}
else
{
    <div class="card mb-3">
        <div class="card-body">
            <h4 class="card-title">@chargingStation.Name</h4>
            <p class="card-text"><strong>Location:</strong> @chargingStation.Location.Name</p>
            <p class="card-text"><strong>Energy Provider:</strong> @chargingStation.EnergyProvider</p>
            <p class="card-text"><strong>Address:</strong> @chargingStation.Street, @chargingStation.City, @chargingStation.Zip, @chargingStation.Country</p>
            <p class="card-text"><strong>Operator:</strong> @chargingStation.OperatorName</p>
            <p class="card-text"><strong>Manufacturer:</strong> @chargingStation.Manufacturer</p>
            <p class="card-text"><strong>Model:</strong> @chargingStation.Model</p>
            <p class="card-text"><strong>Serial Number:</strong> @chargingStation.SerialNbr</p>
            <p class="card-text"><strong>Firmware Version:</strong> @chargingStation.FirmwareVersion</p>
        </div>
    </div>

    <button class="btn btn-primary mr-2" @onclick="() => UpdateChargingStationAndPoints(null)">All</button>
    <button class="btn btn-success mr-2" @onclick="() => UpdateChargingStationAndPoints(true)">Available</button>
    <button class="btn btn-danger" @onclick="() => UpdateChargingStationAndPoints(false)">Not Available</button>



    @if (chargingStation?.ChargingPoints?.Any() == true)
    {
        <table class="table table-hover">
            <thead class="thead-light">
                <tr>
                    <th>Name</th>
                    <th>Power Type</th>
                    <th>Max Power</th>
                    <th>Plug Types</th>
                    <th>Availability</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var chargingPoint in chargingPoints ?? new List<ChargingPoint>())
                {
                    <tr>
                        <td>@chargingPoint.Name</td>
                        <td>@chargingPoint.PowerType</td>
                        <td>@chargingPoint.MaxPower kW</td>
                        <td>@chargingPoint.PlugTypes</td>
                        <td>@(chargingPoint.IsPublic.HasValue && chargingPoint.IsPublic.Value ? "Available" : "Not Available")</td>
                    </tr>
                }
            </tbody>
        </table>
    }
    else
    {
        <p class="text-muted">No charging points available.</p>
    }
}

@code {
    [Parameter]
    public string StationId { get; set; }

    private ChargingStation? chargingStation;
    private List<ChargingPoint>? chargingPoints;
    private bool? showPublic;

    protected override async Task OnInitializedAsync()
    {
        await UpdateChargingStationAndPoints();
    }

    private async Task UpdateChargingStationAndPoints(bool? isPublic = null)
    {
        showPublic = isPublic;
        chargingStation = await ChargingStationService.GetChargingStationById(StationId);
        chargingPoints = await ChargingPointService.GetChargingPointsByStationIdAndAvailability(StationId, showPublic);
        StateHasChanged();
    }


}