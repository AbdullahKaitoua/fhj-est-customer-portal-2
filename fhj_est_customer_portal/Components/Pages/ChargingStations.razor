@page "/chargingstations"
@using Microsoft.AspNetCore.Authorization
@using fhj_est_customer_portal.Services
@inject ChargingStationService ChargingStationService
@inject AuthenticationStateProvider AuthenticationStateProvider
@using System.Security.Claims
@using fhj_est_customer_portal.Entities
@attribute [Authorize]

<h3>Charging Stations</h3>

@if (chargingStations == null)
{
    <p><em>Loading...</em></p>
}
else
{
    if (chargingStations.Count == 0)
    {
        <p>You have no charging stations.</p>
    }
    else
    {
        <table class='table'>
            <thead>
                <tr>
                    <th>Location Name</th>
                    <th>Name</th>
                    <th>Energy Provider</th>
                    <th>Country</th>
                    <th>City</th>
                    <th>Zip</th>
                    <th>Street</th>
                    <th>Operator Name</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var chargingStation in chargingStations)
                {
                    <tr>
                        <td>@chargingStation.Location.Name</td>
                        <td>@chargingStation.Name</td>
                        <td>@chargingStation.EnergyProvider</td>
                        <td>@chargingStation.Country</td>
                        <td>@chargingStation.City</td>
                        <td>@chargingStation.Zip</td>
                        <td>@chargingStation.Street</td>
                        <td>@chargingStation.OperatorName</td>
                    </tr>
                }
            </tbody>
        </table>

          
    }
    
}

@code {
    private string? UserId;
    private List<ChargingStation>? chargingStations;
    private List<Location>? locations;


    protected override async Task OnInitializedAsync()
    {
        var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
        var user = authState.User;
        if (user.Identity.IsAuthenticated)
        {
            UserId = user.FindFirst(ClaimTypes.NameIdentifier)?.Value;
            chargingStations = await ChargingStationService.GetChargingStationsByUserId(UserId);
            locations= await ChargingStationService.GetLocationsByUserId(UserId);

        }
    }
}
